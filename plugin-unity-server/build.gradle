/*
 * Copyright 2000-2023 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'io.github.rodm.teamcity-server' version "1.5"
    id 'io.github.rodm.teamcity-environments' version "1.5"
}

teamcity {
    setVersion(teamcityVersion)

    server {
        descriptor = project.file('teamcity-plugin.xml')
        tokens = [Plugin_Version: project.version]
    }

    environments {
        downloadsDir = "$teamcityBaseDir/downloads"
        baseHomeDir = file("$teamcityBaseDir/servers")
        baseDataDir = file("$teamcityBaseDir/data")

        "teamcity" {
            version = teamcityVersion
        }
    }
}

dependencies {
    agent project(path: ':plugin-unity-agent', configuration: 'plugin')

    implementation project(':plugin-unity-common')
    implementation (project(':csharp-parser')) {
        exclude group: 'com.ibm.icu'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    provided "org.jetbrains.teamcity.internal:server:$teamcityVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "io.mockk:mockk:1.13.3"
}

serverPlugin.version = null

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
    }
}